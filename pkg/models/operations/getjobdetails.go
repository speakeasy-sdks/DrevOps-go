// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetJobDetailsRequest struct {
	// The number of the job.
	JobNumber interface{} `pathParam:"style=simple,explode=false,name=job-number"`
	// Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project-slug"`
}

// GetJobDetailsDefaultApplicationJSON - Error response.
type GetJobDetailsDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

// GetJobDetailsJobDetailsContexts - Information about the context.
type GetJobDetailsJobDetailsContexts struct {
	// The name of the context.
	Name string `json:"name"`
}

// GetJobDetailsJobDetailsExecutor - Information about executor used for a job.
type GetJobDetailsJobDetailsExecutor struct {
	// Resource class name.
	ResourceClass string `json:"resource_class"`
	// Executor type.
	Type *string `json:"type,omitempty"`
}

// GetJobDetailsJobDetailsLatestWorkflow - Info about the latest workflow the job was a part of.
type GetJobDetailsJobDetailsLatestWorkflow struct {
	// The unique ID of the workflow.
	ID string `json:"id"`
	// The name of the workflow.
	Name string `json:"name"`
}

// GetJobDetailsJobDetailsMessages - Message from CircleCI execution platform.
type GetJobDetailsJobDetailsMessages struct {
	// Information describing message.
	Message string `json:"message"`
	// Value describing the reason for message to be added to the job.
	Reason *string `json:"reason,omitempty"`
	// Message type.
	Type string `json:"type"`
}

// GetJobDetailsJobDetailsOrganization - Information about an organization.
type GetJobDetailsJobDetailsOrganization struct {
	// The name of the organization.
	Name string `json:"name"`
}

// GetJobDetailsJobDetailsParallelRuns - Info about a status of the parallel run.
type GetJobDetailsJobDetailsParallelRuns struct {
	// Index of the parallel run.
	Index int64 `json:"index"`
	// Status of the parallel run.
	Status string `json:"status"`
}

// GetJobDetailsJobDetailsPipeline - Info about a pipeline the job is a part of.
type GetJobDetailsJobDetailsPipeline struct {
	// The unique ID of the pipeline.
	ID string `json:"id"`
}

// GetJobDetailsJobDetailsProject - Information about a project.
type GetJobDetailsJobDetailsProject struct {
	// URL to the repository hosting the project's code
	ExternalURL string `json:"external_url"`
	ID          string `json:"id"`
	// The name of the project
	Name string `json:"name"`
	// Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
	Slug string `json:"slug"`
}

// GetJobDetailsJobDetailsStatus - The current status of the job.
type GetJobDetailsJobDetailsStatus string

const (
	GetJobDetailsJobDetailsStatusSuccess            GetJobDetailsJobDetailsStatus = "success"
	GetJobDetailsJobDetailsStatusRunning            GetJobDetailsJobDetailsStatus = "running"
	GetJobDetailsJobDetailsStatusNotRun             GetJobDetailsJobDetailsStatus = "not_run"
	GetJobDetailsJobDetailsStatusFailed             GetJobDetailsJobDetailsStatus = "failed"
	GetJobDetailsJobDetailsStatusRetried            GetJobDetailsJobDetailsStatus = "retried"
	GetJobDetailsJobDetailsStatusQueued             GetJobDetailsJobDetailsStatus = "queued"
	GetJobDetailsJobDetailsStatusNotRunning         GetJobDetailsJobDetailsStatus = "not_running"
	GetJobDetailsJobDetailsStatusInfrastructureFail GetJobDetailsJobDetailsStatus = "infrastructure_fail"
	GetJobDetailsJobDetailsStatusTimedout           GetJobDetailsJobDetailsStatus = "timedout"
	GetJobDetailsJobDetailsStatusOnHold             GetJobDetailsJobDetailsStatus = "on_hold"
	GetJobDetailsJobDetailsStatusTerminatedUnknown  GetJobDetailsJobDetailsStatus = "terminated-unknown"
	GetJobDetailsJobDetailsStatusBlocked            GetJobDetailsJobDetailsStatus = "blocked"
	GetJobDetailsJobDetailsStatusCanceled           GetJobDetailsJobDetailsStatus = "canceled"
	GetJobDetailsJobDetailsStatusUnauthorized       GetJobDetailsJobDetailsStatus = "unauthorized"
)

func (e GetJobDetailsJobDetailsStatus) ToPointer() *GetJobDetailsJobDetailsStatus {
	return &e
}

func (e *GetJobDetailsJobDetailsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "running":
		fallthrough
	case "not_run":
		fallthrough
	case "failed":
		fallthrough
	case "retried":
		fallthrough
	case "queued":
		fallthrough
	case "not_running":
		fallthrough
	case "infrastructure_fail":
		fallthrough
	case "timedout":
		fallthrough
	case "on_hold":
		fallthrough
	case "terminated-unknown":
		fallthrough
	case "blocked":
		fallthrough
	case "canceled":
		fallthrough
	case "unauthorized":
		*e = GetJobDetailsJobDetailsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobDetailsJobDetailsStatus: %v", v)
	}
}

// GetJobDetailsJobDetails - Job Details
type GetJobDetailsJobDetails struct {
	// List of contexts used by the job.
	Contexts []GetJobDetailsJobDetailsContexts `json:"contexts"`
	// The time when the job was created.
	CreatedAt time.Time `json:"created_at"`
	// Duration of a job in milliseconds.
	Duration int64 `json:"duration"`
	// Information about executor used for a job.
	Executor GetJobDetailsJobDetailsExecutor `json:"executor"`
	// Info about the latest workflow the job was a part of.
	LatestWorkflow GetJobDetailsJobDetailsLatestWorkflow `json:"latest_workflow"`
	// Messages from CircleCI execution platform.
	Messages []GetJobDetailsJobDetailsMessages `json:"messages"`
	// The name of the job.
	Name string `json:"name"`
	// The number of the job.
	Number int64 `json:"number"`
	// Information about an organization.
	Organization GetJobDetailsJobDetailsOrganization `json:"organization"`
	// Info about parallels runs and their status.
	ParallelRuns []GetJobDetailsJobDetailsParallelRuns `json:"parallel_runs"`
	// A number of parallel runs the job has.
	Parallelism int64 `json:"parallelism"`
	// Info about a pipeline the job is a part of.
	Pipeline GetJobDetailsJobDetailsPipeline `json:"pipeline"`
	// Information about a project.
	Project GetJobDetailsJobDetailsProject `json:"project"`
	// The time when the job was placed in a queue.
	QueuedAt time.Time `json:"queued_at"`
	// The date and time the job started.
	StartedAt time.Time `json:"started_at"`
	// The current status of the job.
	Status GetJobDetailsJobDetailsStatus `json:"status"`
	// The time when the job stopped.
	StoppedAt *time.Time `json:"stopped_at,omitempty"`
	// URL of the job in CircleCI Web UI.
	WebURL string `json:"web_url"`
}

type GetJobDetailsResponse struct {
	ContentType string
	// Job details.
	JobDetails  *GetJobDetailsJobDetails
	StatusCode  int
	RawResponse *http.Response
	// Error response.
	GetJobDetailsDefaultApplicationJSONObject *GetJobDetailsDefaultApplicationJSON
}
