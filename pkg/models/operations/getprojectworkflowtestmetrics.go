// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetProjectWorkflowTestMetricsRequest struct {
	// Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
	AllBranches *bool `queryParam:"style=form,explode=true,name=all-branches"`
	// The name of a vcs branch. If not passed we will scope the API call to the default branch.
	Branch *string `queryParam:"style=form,explode=true,name=branch"`
	// Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project-slug"`
	// The name of the workflow.
	WorkflowName string `pathParam:"style=simple,explode=false,name=workflow-name"`
}

// GetProjectWorkflowTestMetricsDefaultApplicationJSON - Error response.
type GetProjectWorkflowTestMetricsDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

type GetProjectWorkflowTestMetrics200ApplicationJSONMostFailedTests struct {
	// The class the test belongs to.
	Classname string `json:"classname"`
	// The number of times the test failed
	FailedRuns int64 `json:"failed_runs"`
	// The file the test belongs to.
	File string `json:"file"`
	// Whether the test is flaky.
	Flaky bool `json:"flaky"`
	// The name of the job.
	JobName string `json:"job_name"`
	// The 95th percentile duration, in seconds, among a group of test runs.
	P95Duration float64 `json:"p95_duration"`
	// The source of the test.
	Source string `json:"source"`
	// The name of the test.
	TestName string `json:"test_name"`
	// The total number of times the test was run.
	TotalRuns int64 `json:"total_runs"`
}

type GetProjectWorkflowTestMetrics200ApplicationJSONSlowestTests struct {
	// The class the test belongs to.
	Classname string `json:"classname"`
	// The number of times the test failed
	FailedRuns int64 `json:"failed_runs"`
	// The file the test belongs to.
	File string `json:"file"`
	// Whether the test is flaky.
	Flaky bool `json:"flaky"`
	// The name of the job.
	JobName string `json:"job_name"`
	// The 95th percentile duration, in seconds, among a group of test runs.
	P95Duration float64 `json:"p95_duration"`
	// The source of the test.
	Source string `json:"source"`
	// The name of the test.
	TestName string `json:"test_name"`
	// The total number of times the test was run.
	TotalRuns int64 `json:"total_runs"`
}

// GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts - Test counts for a given pipeline number
type GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts struct {
	// The number of tests with the error status
	Error int64 `json:"error"`
	// The number of tests with the failure status
	Failure int64 `json:"failure"`
	// The number of tests with the skipped status
	Skipped int64 `json:"skipped"`
	// The number of tests with the success status
	Success int64 `json:"success"`
	// The total number of tests
	Total int64 `json:"total"`
}

type GetProjectWorkflowTestMetrics200ApplicationJSONTestRuns struct {
	// The number of the pipeline associated with the provided test counts
	PipelineNumber int64 `json:"pipeline_number"`
	// The success rate calculated from test counts
	SuccessRate float32 `json:"success_rate"`
	// Test counts for a given pipeline number
	TestCounts GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts `json:"test_counts"`
	// The ID of the workflow associated with the provided test counts
	WorkflowID interface{} `json:"workflow_id"`
}

// GetProjectWorkflowTestMetrics200ApplicationJSON - Project level test metrics response
type GetProjectWorkflowTestMetrics200ApplicationJSON struct {
	// The average number of tests executed per run
	AverageTestCount int64 `json:"average_test_count"`
	// Metrics for the most frequently failing tests
	MostFailedTests []GetProjectWorkflowTestMetrics200ApplicationJSONMostFailedTests `json:"most_failed_tests"`
	// The number of tests with the same success rate being omitted from most_failed_tests
	MostFailedTestsExtra int64 `json:"most_failed_tests_extra"`
	// Metrics for the slowest running tests
	SlowestTests []GetProjectWorkflowTestMetrics200ApplicationJSONSlowestTests `json:"slowest_tests"`
	// The number of tests with the same duration rate being omitted from slowest_tests
	SlowestTestsExtra int64 `json:"slowest_tests_extra"`
	// Test counts grouped by pipeline number and workflow id
	TestRuns []GetProjectWorkflowTestMetrics200ApplicationJSONTestRuns `json:"test_runs"`
	// The total number of test runs
	TotalTestRuns int64 `json:"total_test_runs"`
}

type GetProjectWorkflowTestMetricsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of test metrics by workflow
	GetProjectWorkflowTestMetrics200ApplicationJSONObject *GetProjectWorkflowTestMetrics200ApplicationJSON
	// Error response.
	GetProjectWorkflowTestMetricsDefaultApplicationJSONObject *GetProjectWorkflowTestMetricsDefaultApplicationJSON
}
