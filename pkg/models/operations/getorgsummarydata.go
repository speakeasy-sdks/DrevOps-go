// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOrgSummaryDataProjectNames - List of project names.
type GetOrgSummaryDataProjectNames struct {
}

// GetOrgSummaryDataReportingWindow - The time window used to calculate summary metrics.
type GetOrgSummaryDataReportingWindow string

const (
	GetOrgSummaryDataReportingWindowLast7Days   GetOrgSummaryDataReportingWindow = "last-7-days"
	GetOrgSummaryDataReportingWindowLast90Days  GetOrgSummaryDataReportingWindow = "last-90-days"
	GetOrgSummaryDataReportingWindowLast24Hours GetOrgSummaryDataReportingWindow = "last-24-hours"
	GetOrgSummaryDataReportingWindowLast30Days  GetOrgSummaryDataReportingWindow = "last-30-days"
	GetOrgSummaryDataReportingWindowLast60Days  GetOrgSummaryDataReportingWindow = "last-60-days"
)

func (e GetOrgSummaryDataReportingWindow) ToPointer() *GetOrgSummaryDataReportingWindow {
	return &e
}

func (e *GetOrgSummaryDataReportingWindow) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "last-7-days":
		fallthrough
	case "last-90-days":
		fallthrough
	case "last-24-hours":
		fallthrough
	case "last-30-days":
		fallthrough
	case "last-60-days":
		*e = GetOrgSummaryDataReportingWindow(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrgSummaryDataReportingWindow: %v", v)
	}
}

type GetOrgSummaryDataRequest struct {
	// Org slug in the form `vcs-slug/org-name`. The `/` characters may be URL-escaped.
	OrgSlug string `pathParam:"style=simple,explode=false,name=org-slug"`
	// List of project names.
	ProjectNames *GetOrgSummaryDataProjectNames `queryParam:"style=form,explode=true,name=project-names"`
	// The time window used to calculate summary metrics.
	ReportingWindow *GetOrgSummaryDataReportingWindow `queryParam:"style=form,explode=true,name=reporting-window"`
}

// GetOrgSummaryDataDefaultApplicationJSON - Error response.
type GetOrgSummaryDataDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

// GetOrgSummaryData200ApplicationJSONOrgDataMetrics - Metrics for a single org metrics.
type GetOrgSummaryData200ApplicationJSONOrgDataMetrics struct {
	SuccessRate float32 `json:"success_rate"`
	// The average number of runs per day.
	Throughput float32 `json:"throughput"`
	// The total credits consumed over the current timeseries interval.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// Total duration, in seconds.
	TotalDurationSecs int64 `json:"total_duration_secs"`
	// The total number of runs.
	TotalRuns int64 `json:"total_runs"`
}

// GetOrgSummaryData200ApplicationJSONOrgDataTrends - Trends for a single org.
type GetOrgSummaryData200ApplicationJSONOrgDataTrends struct {
	// The trend value for the success rate.
	SuccessRate float32 `json:"success_rate"`
	// Trend value for the average number of runs per day.
	Throughput float32 `json:"throughput"`
	// The trend value for total credits consumed.
	TotalCreditsUsed float32 `json:"total_credits_used"`
	// Trend value for total duration.
	TotalDurationSecs float32 `json:"total_duration_secs"`
	// The trend value for total number of runs.
	TotalRuns float32 `json:"total_runs"`
}

// GetOrgSummaryData200ApplicationJSONOrgData - Aggregated metrics for an org, with trends.
type GetOrgSummaryData200ApplicationJSONOrgData struct {
	// Metrics for a single org metrics.
	Metrics GetOrgSummaryData200ApplicationJSONOrgDataMetrics `json:"metrics"`
	// Trends for a single org.
	Trends GetOrgSummaryData200ApplicationJSONOrgDataTrends `json:"trends"`
}

// GetOrgSummaryData200ApplicationJSONOrgProjectDataMetrics - Metrics for a single project, across all branches.
type GetOrgSummaryData200ApplicationJSONOrgProjectDataMetrics struct {
	SuccessRate float32 `json:"success_rate"`
	// The total credits consumed over the current timeseries interval.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// Total duration, in seconds.
	TotalDurationSecs int64 `json:"total_duration_secs"`
	// The total number of runs.
	TotalRuns int64 `json:"total_runs"`
}

// GetOrgSummaryData200ApplicationJSONOrgProjectDataTrends - Trends for a single project, across all branches.
type GetOrgSummaryData200ApplicationJSONOrgProjectDataTrends struct {
	// The trend value for the success rate.
	SuccessRate float32 `json:"success_rate"`
	// The trend value for total credits consumed.
	TotalCreditsUsed float32 `json:"total_credits_used"`
	// Trend value for total duration.
	TotalDurationSecs float32 `json:"total_duration_secs"`
	// The trend value for total number of runs.
	TotalRuns float32 `json:"total_runs"`
}

type GetOrgSummaryData200ApplicationJSONOrgProjectData struct {
	// Metrics for a single project, across all branches.
	Metrics GetOrgSummaryData200ApplicationJSONOrgProjectDataMetrics `json:"metrics"`
	// The name of the project.
	ProjectName string `json:"project_name"`
	// Trends for a single project, across all branches.
	Trends GetOrgSummaryData200ApplicationJSONOrgProjectDataTrends `json:"trends"`
}

// GetOrgSummaryData200ApplicationJSON - Summary metrics with trends for the entire org, and for each project.
type GetOrgSummaryData200ApplicationJSON struct {
	// A list of all the project names in the organization.
	AllProjects []string `json:"all_projects"`
	// Aggregated metrics for an org, with trends.
	OrgData GetOrgSummaryData200ApplicationJSONOrgData `json:"org_data"`
	// Metrics for a single project, across all branches
	OrgProjectData []GetOrgSummaryData200ApplicationJSONOrgProjectData `json:"org_project_data"`
}

type GetOrgSummaryDataResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// summary metrics with trends for an entire org and it's projects.
	GetOrgSummaryData200ApplicationJSONObject *GetOrgSummaryData200ApplicationJSON
	// Error response.
	GetOrgSummaryDataDefaultApplicationJSONObject *GetOrgSummaryDataDefaultApplicationJSON
}
