// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetProjectWorkflowRunsRequest struct {
	// Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
	AllBranches *bool `queryParam:"style=form,explode=true,name=all-branches"`
	// The name of a vcs branch. If not passed we will scope the API call to the default branch.
	Branch *string `queryParam:"style=form,explode=true,name=branch"`
	// Include only executions that started before this date. This date can be at most 90 days after the start-date.
	EndDate *time.Time `queryParam:"style=form,explode=true,name=end-date"`
	// A token to retrieve the next page of results.
	PageToken *string `queryParam:"style=form,explode=true,name=page-token"`
	// Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project-slug"`
	// Include only executions that started at or after this date. This must be specified if an end-date is provided.
	StartDate *time.Time `queryParam:"style=form,explode=true,name=start-date"`
	// The name of the workflow.
	WorkflowName string `pathParam:"style=simple,explode=false,name=workflow-name"`
}

// GetProjectWorkflowRunsDefaultApplicationJSON - Error response.
type GetProjectWorkflowRunsDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

// GetProjectWorkflowRuns200ApplicationJSONItemsStatus - Workflow status.
type GetProjectWorkflowRuns200ApplicationJSONItemsStatus string

const (
	GetProjectWorkflowRuns200ApplicationJSONItemsStatusSuccess      GetProjectWorkflowRuns200ApplicationJSONItemsStatus = "success"
	GetProjectWorkflowRuns200ApplicationJSONItemsStatusFailed       GetProjectWorkflowRuns200ApplicationJSONItemsStatus = "failed"
	GetProjectWorkflowRuns200ApplicationJSONItemsStatusError        GetProjectWorkflowRuns200ApplicationJSONItemsStatus = "error"
	GetProjectWorkflowRuns200ApplicationJSONItemsStatusCanceled     GetProjectWorkflowRuns200ApplicationJSONItemsStatus = "canceled"
	GetProjectWorkflowRuns200ApplicationJSONItemsStatusUnauthorized GetProjectWorkflowRuns200ApplicationJSONItemsStatus = "unauthorized"
)

func (e GetProjectWorkflowRuns200ApplicationJSONItemsStatus) ToPointer() *GetProjectWorkflowRuns200ApplicationJSONItemsStatus {
	return &e
}

func (e *GetProjectWorkflowRuns200ApplicationJSONItemsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "failed":
		fallthrough
	case "error":
		fallthrough
	case "canceled":
		fallthrough
	case "unauthorized":
		*e = GetProjectWorkflowRuns200ApplicationJSONItemsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectWorkflowRuns200ApplicationJSONItemsStatus: %v", v)
	}
}

type GetProjectWorkflowRuns200ApplicationJSONItems struct {
	// The VCS branch of a Workflow's trigger.
	Branch string `json:"branch"`
	// The date and time the workflow was created.
	CreatedAt time.Time `json:"created_at"`
	// The number of credits used during execution. Note that Insights is not a real time financial reporting tool and should not be used for credit reporting.
	CreditsUsed int64 `json:"credits_used"`
	// The duration in seconds of a run.
	Duration int64 `json:"duration"`
	// The unique ID of the workflow.
	ID string `json:"id"`
	// Workflow status.
	Status GetProjectWorkflowRuns200ApplicationJSONItemsStatus `json:"status"`
	// The date and time the workflow stopped.
	StoppedAt time.Time `json:"stopped_at"`
}

// GetProjectWorkflowRuns200ApplicationJSON - Paginated recent workflow runs.
type GetProjectWorkflowRuns200ApplicationJSON struct {
	// Recent workflow runs.
	Items []GetProjectWorkflowRuns200ApplicationJSONItems `json:"items"`
	// A token to pass as a `page-token` query parameter to return the next page of results.
	NextPageToken string `json:"next_page_token"`
}

type GetProjectWorkflowRunsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A paginated list of recent workflow runs
	GetProjectWorkflowRuns200ApplicationJSONObject *GetProjectWorkflowRuns200ApplicationJSON
	// Error response.
	GetProjectWorkflowRunsDefaultApplicationJSONObject *GetProjectWorkflowRunsDefaultApplicationJSON
}
