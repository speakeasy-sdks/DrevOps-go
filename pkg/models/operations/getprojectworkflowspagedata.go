// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetProjectWorkflowsPageDataReportingWindow - The time window used to calculate summary metrics.
type GetProjectWorkflowsPageDataReportingWindow string

const (
	GetProjectWorkflowsPageDataReportingWindowLast7Days   GetProjectWorkflowsPageDataReportingWindow = "last-7-days"
	GetProjectWorkflowsPageDataReportingWindowLast90Days  GetProjectWorkflowsPageDataReportingWindow = "last-90-days"
	GetProjectWorkflowsPageDataReportingWindowLast24Hours GetProjectWorkflowsPageDataReportingWindow = "last-24-hours"
	GetProjectWorkflowsPageDataReportingWindowLast30Days  GetProjectWorkflowsPageDataReportingWindow = "last-30-days"
	GetProjectWorkflowsPageDataReportingWindowLast60Days  GetProjectWorkflowsPageDataReportingWindow = "last-60-days"
)

func (e GetProjectWorkflowsPageDataReportingWindow) ToPointer() *GetProjectWorkflowsPageDataReportingWindow {
	return &e
}

func (e *GetProjectWorkflowsPageDataReportingWindow) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "last-7-days":
		fallthrough
	case "last-90-days":
		fallthrough
	case "last-24-hours":
		fallthrough
	case "last-30-days":
		fallthrough
	case "last-60-days":
		*e = GetProjectWorkflowsPageDataReportingWindow(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectWorkflowsPageDataReportingWindow: %v", v)
	}
}

type GetProjectWorkflowsPageDataRequest struct {
	// The names of VCS branches to include in branch-level workflow metrics.
	Branches map[string]interface{} `queryParam:"style=form,explode=true,name=branches"`
	// Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project-slug"`
	// The time window used to calculate summary metrics.
	ReportingWindow *GetProjectWorkflowsPageDataReportingWindow `queryParam:"style=form,explode=true,name=reporting-window"`
	// The names of workflows to include in workflow-level metrics.
	WorkflowNames map[string]interface{} `queryParam:"style=form,explode=true,name=workflow-names"`
}

// GetProjectWorkflowsPageDataDefaultApplicationJSON - Error response.
type GetProjectWorkflowsPageDataDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectDataMetrics - Metrics aggregated across all workflows and branches for a project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectDataMetrics struct {
	SuccessRate float32 `json:"success_rate"`
	// The average number of runs per day.
	Throughput float32 `json:"throughput"`
	// The total credits consumed over the current timeseries interval.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// Total duration, in seconds.
	TotalDurationSecs int64 `json:"total_duration_secs"`
	// The total number of runs.
	TotalRuns int64 `json:"total_runs"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends - Metric trends aggregated across all workflows and branches for a project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends struct {
	// The trend value for the success rate.
	SuccessRate float32 `json:"success_rate"`
	// Trend value for the average number of runs per day.
	Throughput float32 `json:"throughput"`
	// The trend value for total credits consumed.
	TotalCreditsUsed float32 `json:"total_credits_used"`
	// Trend value for total duration.
	TotalDurationSecs float32 `json:"total_duration_secs"`
	// The trend value for total number of runs.
	TotalRuns float32 `json:"total_runs"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectData - Metrics and trends data aggregated for a given project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectData struct {
	// Metrics aggregated across all workflows and branches for a project.
	Metrics GetProjectWorkflowsPageData200ApplicationJSONProjectDataMetrics `json:"metrics"`
	// Metric trends aggregated across all workflows and branches for a project.
	Trends GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends `json:"trends"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataMetrics - Metrics aggregated across a workflow or branchfor a project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataMetrics struct {
	// The 95th percentile duration among a group of workflow runs.
	P95DurationSecs float32 `json:"p95_duration_secs"`
	SuccessRate     float32 `json:"success_rate"`
	// The total credits consumed over the current timeseries interval.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// The total number of runs.
	TotalRuns int64 `json:"total_runs"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataTrends - Trends aggregated across a workflow or branch for a project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataTrends struct {
	// The 95th percentile duration among a group of workflow runs.
	P95DurationSecs float32 `json:"p95_duration_secs"`
	// The trend value for the success rate.
	SuccessRate float32 `json:"success_rate"`
	// The trend value for total credits consumed.
	TotalCreditsUsed float32 `json:"total_credits_used"`
	// The trend value for total number of runs.
	TotalRuns float32 `json:"total_runs"`
}

type GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchData struct {
	// The VCS branch of a workflow's trigger.
	Branch string `json:"branch"`
	// Metrics aggregated across a workflow or branchfor a project.
	Metrics GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataMetrics `json:"metrics"`
	// Trends aggregated across a workflow or branch for a project.
	Trends GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataTrends `json:"trends"`
	// The name of the workflow.
	WorkflowName string `json:"workflow_name"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataMetrics - Metrics aggregated across a workflow or branchfor a project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataMetrics struct {
	// The 95th percentile duration among a group of workflow runs.
	P95DurationSecs float32 `json:"p95_duration_secs"`
	SuccessRate     float32 `json:"success_rate"`
	// The total credits consumed over the current timeseries interval.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// The total number of runs.
	TotalRuns int64 `json:"total_runs"`
}

// GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataTrends - Trends aggregated across a workflow or branch for a project.
type GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataTrends struct {
	// The 95th percentile duration among a group of workflow runs.
	P95DurationSecs float32 `json:"p95_duration_secs"`
	// The trend value for the success rate.
	SuccessRate float32 `json:"success_rate"`
	// The trend value for total credits consumed.
	TotalCreditsUsed float32 `json:"total_credits_used"`
	// The trend value for total number of runs.
	TotalRuns float32 `json:"total_runs"`
}

type GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowData struct {
	// Metrics aggregated across a workflow or branchfor a project.
	Metrics GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataMetrics `json:"metrics"`
	// Trends aggregated across a workflow or branch for a project.
	Trends GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataTrends `json:"trends"`
	// The name of the workflow.
	WorkflowName string `json:"workflow_name"`
}

// GetProjectWorkflowsPageData200ApplicationJSON - Aggregated summary metrics and trends by workflow and branches
type GetProjectWorkflowsPageData200ApplicationJSON struct {
	// A list of all the branches for a given project.
	AllBranches []string `json:"all_branches,omitempty"`
	// A list of all the workflows for a given project.
	AllWorkflows []string `json:"all_workflows,omitempty"`
	// The unique ID of the organization
	OrgID interface{} `json:"org_id,omitempty"`
	// Metrics and trends data aggregated for a given project.
	ProjectData *GetProjectWorkflowsPageData200ApplicationJSONProjectData `json:"project_data,omitempty"`
	// The unique ID of the project
	ProjectID interface{} `json:"project_id,omitempty"`
	// A list of metrics and trends data for branches for a given project.
	ProjectWorkflowBranchData []GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchData `json:"project_workflow_branch_data,omitempty"`
	// A list of metrics and trends data for workflows for a given project.
	ProjectWorkflowData []GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowData `json:"project_workflow_data,omitempty"`
}

type GetProjectWorkflowsPageDataResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Aggregated summary metrics and trends by workflow and branches
	GetProjectWorkflowsPageData200ApplicationJSONObject *GetProjectWorkflowsPageData200ApplicationJSON
	// Error response.
	GetProjectWorkflowsPageDataDefaultApplicationJSONObject *GetProjectWorkflowsPageDataDefaultApplicationJSON
}
