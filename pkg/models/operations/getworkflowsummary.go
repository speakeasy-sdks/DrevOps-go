// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

// GetWorkflowSummaryBranches - The names of VCS branches to include in branch-level workflow metrics.
type GetWorkflowSummaryBranches struct {
}

type GetWorkflowSummaryRequest struct {
	// Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
	AllBranches *bool `queryParam:"style=form,explode=true,name=all-branches"`
	// The names of VCS branches to include in branch-level workflow metrics.
	Branches *GetWorkflowSummaryBranches `queryParam:"style=form,explode=true,name=branches"`
	// Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project-slug"`
	// The name of the workflow.
	WorkflowName string `pathParam:"style=simple,explode=false,name=workflow-name"`
}

// GetWorkflowSummaryDefaultApplicationJSON - Error response.
type GetWorkflowSummaryDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

// GetWorkflowSummary200ApplicationJSONMetricsDurationMetrics - Metrics relating to the duration of runs for a workflow.
type GetWorkflowSummary200ApplicationJSONMetricsDurationMetrics struct {
	// The max duration, in seconds, among a group of runs.
	Max int64 `json:"max"`
	// The mean duration, in seconds, among a group of runs.
	Mean int64 `json:"mean"`
	// The median duration, in seconds, among a group of runs.
	Median int64 `json:"median"`
	// The minimum duration, in seconds, among a group of runs.
	Min int64 `json:"min"`
	// The 95th percentile duration, in seconds, among a group of runs.
	P95 int64 `json:"p95"`
	// The standard deviation, in seconds, among a group of runs.
	StandardDeviation float32 `json:"standard_deviation"`
}

// GetWorkflowSummary200ApplicationJSONMetrics - Metrics aggregated across a workflow for a given time window.
type GetWorkflowSummary200ApplicationJSONMetrics struct {
	// Metrics relating to the duration of runs for a workflow.
	DurationMetrics GetWorkflowSummary200ApplicationJSONMetricsDurationMetrics `json:"duration_metrics"`
	// The number of failed runs.
	FailedRuns int64 `json:"failed_runs"`
	// The mean time to recovery (mean time between failures and their next success) in seconds.
	Mttr        int64   `json:"mttr"`
	SuccessRate float32 `json:"success_rate"`
	// The number of successful runs.
	SuccessfulRuns int64 `json:"successful_runs"`
	// The average number of runs per day.
	Throughput float32 `json:"throughput"`
	// The total credits consumed by the workflow in the aggregation window. Note that Insights is not a real time financial reporting tool and should not be used for credit reporting.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// The total number of runs.
	TotalRuns int64 `json:"total_runs"`
	// The end of the aggregation window for workflow metrics.
	WindowEnd time.Time `json:"window_end"`
	// The start of the aggregation window for workflow metrics.
	WindowStart time.Time `json:"window_start"`
}

// GetWorkflowSummary200ApplicationJSONTrends - Trends for aggregated metrics across a workflow for a given time window.
type GetWorkflowSummary200ApplicationJSONTrends struct {
	// The trend value for number of failed runs.
	FailedRuns float32 `json:"failed_runs"`
	// Trend value for the 50th percentile duration for a workflow for a given time window.
	MedianDurationSecs float32 `json:"median_duration_secs"`
	// trend for mean time to recovery (mean time between failures and their next success).
	Mttr float32 `json:"mttr"`
	// Trend value for the 95th percentile duration for a workflow for a given time window.
	P95DurationSecs float32 `json:"p95_duration_secs"`
	// The trend value for the success rate.
	SuccessRate float32 `json:"success_rate"`
	// Trend value for the average number of runs per day.
	Throughput float32 `json:"throughput"`
	// The trend value for total credits consumed.
	TotalCreditsUsed float32 `json:"total_credits_used"`
	// The trend value for total number of runs.
	TotalRuns float32 `json:"total_runs"`
}

// GetWorkflowSummary200ApplicationJSON - Workflow level aggregated metrics and trends response
type GetWorkflowSummary200ApplicationJSON struct {
	// Metrics aggregated across a workflow for a given time window.
	Metrics GetWorkflowSummary200ApplicationJSONMetrics `json:"metrics"`
	// Trends for aggregated metrics across a workflow for a given time window.
	Trends GetWorkflowSummary200ApplicationJSONTrends `json:"trends"`
	// A list of all the workflow names for a given project.
	WorkflowNames []string `json:"workflow_names"`
}

type GetWorkflowSummaryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Metrics and trends for a workflow
	GetWorkflowSummary200ApplicationJSONObject *GetWorkflowSummary200ApplicationJSON
	// Error response.
	GetWorkflowSummaryDefaultApplicationJSONObject *GetWorkflowSummaryDefaultApplicationJSON
}
